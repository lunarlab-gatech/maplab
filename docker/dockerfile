# ===============================
# ROS Noetic Base + Maplab Docker
# ===============================


FROM ros:noetic-ros-base-focal


# Set user arguments (being username, echo $UID, and id -g)
ARG USERNAME=dbutterfield3
ARG USER_UID=3332128
ARG USER_GID=2626

# Create a non-root user with matching UID/GID
RUN groupadd --gid ${USER_GID} ${USERNAME} && \
    useradd --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME} && \
    usermod -aG sudo ${USERNAME} && \
    echo "${USERNAME} ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Add a custom .bashrc with warm colors and fixed hostname
RUN echo 'export PS1="\\[\\e[1;31m\\]\\u@maplab_container\\[\\e[0m\\]:\\[\\e[1;33m\\]\\w\\[\\e[0m\\]\\$ "' > /home/${USERNAME}/.bashrc && \
    chown ${USERNAME}:${USERNAME} /home/${USERNAME}/.bashrc

# Set default user
USER ${USERNAME}
WORKDIR /home/${USERNAME}


ENV DEBIAN_FRONTEND=noninteractive
ARG CATKIN_WS=/root/maplab_ws


RUN apt-get update && apt-get install -y --no-install-recommends \
    # Core Build Tools
    build-essential \
    cmake \
    git \
    curl \
    wget \
    ccache \
    doxygen \
    clang-format-6.0 \
    # Python & ROS Build Tools
    python3-pip \
    python3-setuptools \
    python3-dev \
    python3-numpy \
    python3-catkin-tools \
    python3-wstool \
    python3-empy \
    python3-opencv \
    python3-autopep8 \
    python3-termcolor \
    pylint \
    # Linear Algebra / Numerical Libraries
    libatlas-base-dev \
    liblapack-dev \
    libblas-dev \
    libsuitesparse-dev \
    libeigen3-dev \
    libreadline-dev \
    # Logging / Protobuf
    libgoogle-glog-dev \
    libgflags-dev \
    libprotobuf-dev \
    protobuf-compiler \
    # ROS Common Packages (pre-built)
    ros-noetic-rviz \
    ros-noetic-tf \
    ros-noetic-tf-conversions \
    ros-noetic-eigen-conversions \
    ros-noetic-cv-bridge \
    ros-noetic-image-transport \
    ros-noetic-message-filters \
    ros-noetic-geometry-msgs \
    ros-noetic-visualization-msgs \
    ros-noetic-pcl-ros \
    ros-noetic-pcl-conversions \
    ros-noetic-std-msgs \
    ros-noetic-roscpp \
    ros-noetic-rospy \
    ros-noetic-nodelet \
    ros-noetic-pluginlib \
    ros-noetic-cmake-modules \
    ros-noetic-catkin \
    ros-noetic-rosbag \
    ros-noetic-resource-retriever \
    ros-noetic-octomap \
    ros-noetic-octomap-msgs \
    ros-noetic-interactive-markers \
    ros-noetic-roslint \
    && rm -rf /var/lib/apt/lists/* \
    && pip3 install --no-cache-dir requests


# Default shell
SHELL ["/bin/bash", "-c"]

# Set the User environment variables
RUN echo "export USER=${USERNAME}" >> ~/.bashrc


RUN rosdep init || true && rosdep update
RUN echo "source /opt/ros/noetic/setup.bash" >> /root/.bashrc

# Enable ccache for faster rebuilds
RUN echo 'export PATH="/usr/lib/ccache:$PATH"' >> /root/.bashrc \
    && echo 'ccache --max-size=20G' >> /root/.bashrc


RUN mkdir -p ${CATKIN_WS}/src
WORKDIR ${CATKIN_WS}

# Initialize catkin workspace
RUN catkin init && \
    catkin config --merge-devel && \
    catkin config --extend /opt/ros/noetic && \
    catkin config --cmake-args \
        -DCMAKE_BUILD_TYPE=Release

RUN git config --global url."https://github.com/".insteadOf "git@github.com:"
RUN git clone https://github.com/ethz-asl/maplab.git --recursive -b master
RUN maplab build maplab


WORKDIR ${CATKIN_WS}

